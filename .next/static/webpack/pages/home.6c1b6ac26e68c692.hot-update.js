"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/home",{

/***/ "(pages-dir-browser)/./app/auth.tsx":
/*!**********************!*\
  !*** ./app/auth.tsx ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchUserInfo: () => (/* binding */ fetchUserInfo),\n/* harmony export */   logout: () => (/* binding */ logout),\n/* harmony export */   signIn: () => (/* binding */ signIn)\n/* harmony export */ });\nasync function signIn(email, password) {\n    const credentials = \"\".concat(email, \":\").concat(password);\n    const encodedCredentials = btoa(credentials); // convert string to bytes\n    try {\n        const response = await fetch(\"https://learn.reboot01.com/api/auth/signin\", {\n            method: \"POST\",\n            headers: {\n                Authorization: \"Basic \".concat(encodedCredentials),\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (response.ok) {\n            const token = await response.json(); // Token returned as JSON\n            if (token && token.access_token) {\n                const cleanToken = token.access_token.replace(/^\"(.*)\"$/, \"$1\"); // remove the token from the response\n                localStorage.setItem(\"jwt\", cleanToken); // set the token to localStorage \n                console.log(\"JWT Token saved:\", localStorage.getItem('jwt'));\n                return cleanToken; // Return the token for use in redirection\n            } else {\n                return \"Login successful, but no token received.\";\n            }\n        } else {\n            const errorText = await response.json();\n            // Make sure we extract a meaningful error message here\n            const message = errorText.message || \"Login failed. Please try again.\";\n            return message; // Return the error message from the response\n        }\n    } catch (error) {\n        console.error(\"Error during login:\", error);\n        return \"An error occurred. Please try again.\"; // Return error message\n    }\n}\nconst fetchUserInfo = async ()=>{\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n        return null;\n    }\n    try {\n        const response = await fetch('https://learn.reboot01.com/api/graphql-engine/v1/graphql', {\n            method: 'POST',\n            headers: {\n                Authorization: \"Bearer \".concat(token),\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                query: \"\\n            {\\n                user {\\n                    firstName\\n                    lastName\\n                    id\\n                    login\\n                    email\\n                    campus\\n                }\\n            }\\n        \"\n            })\n        });\n        if (!response.ok) {\n            throw new Error('Failed to fetch user info');\n        }\n        const result = await response.json();\n        // Make sure we have data before returning it\n        if (result.data && result.data.user) {\n            return result.data.user;\n        } else {\n            throw new Error('User data is missing or invalid.');\n        }\n    } catch (error) {\n        console.error('Error fetching user info:', error);\n        return null; // Return null if the fetch failed\n    }\n};\nconst logout = ()=>{\n    localStorage.removeItem('jwt'); // remove the token from local storage\n    console.log(\"User logged out\");\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2FwcC9hdXRoLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxlQUFlQSxPQUFPQyxLQUFhLEVBQUVDLFFBQWdCO0lBQzFELE1BQU1DLGNBQWMsR0FBWUQsT0FBVEQsT0FBTSxLQUFZLE9BQVRDO0lBQ2hDLE1BQU1FLHFCQUFxQkMsS0FBS0YsY0FBYywwQkFBMEI7SUFFeEUsSUFBSTtRQUNGLE1BQU1HLFdBQVcsTUFBTUMsTUFBTSw4Q0FBOEM7WUFDekVDLFFBQVE7WUFDUkMsU0FBUztnQkFDUEMsZUFBZSxTQUE0QixPQUFuQk47Z0JBQ3hCLGdCQUFnQjtZQUNsQjtRQUNGO1FBRUEsSUFBSUUsU0FBU0ssRUFBRSxFQUFFO1lBQ2YsTUFBTUMsUUFBUSxNQUFNTixTQUFTTyxJQUFJLElBQUsseUJBQXlCO1lBRS9ELElBQUlELFNBQVNBLE1BQU1FLFlBQVksRUFBRTtnQkFDL0IsTUFBTUMsYUFBYUgsTUFBTUUsWUFBWSxDQUFDRSxPQUFPLENBQUMsWUFBWSxPQUFRLHFDQUFxQztnQkFDdkdDLGFBQWFDLE9BQU8sQ0FBQyxPQUFPSCxhQUFhLGlDQUFpQztnQkFDMUVJLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0JILGFBQWFJLE9BQU8sQ0FBQztnQkFFckQsT0FBT04sWUFBWSwwQ0FBMEM7WUFDL0QsT0FBTztnQkFDTCxPQUFPO1lBQ1Q7UUFDRixPQUFPO1lBQ0wsTUFBTU8sWUFBWSxNQUFNaEIsU0FBU08sSUFBSTtZQUNyQyx1REFBdUQ7WUFDdkQsTUFBTVUsVUFBVUQsVUFBVUMsT0FBTyxJQUFJO1lBQ3JDLE9BQU9BLFNBQVMsNkNBQTZDO1FBQy9EO0lBQ0YsRUFBRSxPQUFPQyxPQUFPO1FBQ2RMLFFBQVFLLEtBQUssQ0FBQyx1QkFBdUJBO1FBQ3JDLE9BQU8sd0NBQXdDLHVCQUF1QjtJQUN4RTtBQUNGO0FBRU8sTUFBTUMsZ0JBQWdCO0lBQzNCLE1BQU1iLFFBQVFLLGFBQWFJLE9BQU8sQ0FBQztJQUNuQyxJQUFJLENBQUNULE9BQU87UUFDVixPQUFPO0lBQ1Q7SUFFQSxJQUFJO1FBQ0YsTUFBTU4sV0FBVyxNQUFNQyxNQUFNLDREQUE0RDtZQUN2RkMsUUFBUTtZQUNSQyxTQUFTO2dCQUNQQyxlQUFlLFVBQWdCLE9BQU5FO2dCQUN6QixnQkFBZ0I7WUFDbEI7WUFDQWMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUNuQkMsT0FBUTtZQVlaO1FBQ0Y7UUFFRSxJQUFJLENBQUN2QixTQUFTSyxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJbUIsTUFBTTtRQUNsQjtRQUVBLE1BQU1DLFNBQVMsTUFBTXpCLFNBQVNPLElBQUk7UUFFbEMsNkNBQTZDO1FBQzdDLElBQUlrQixPQUFPQyxJQUFJLElBQUlELE9BQU9DLElBQUksQ0FBQ0MsSUFBSSxFQUFFO1lBQ25DLE9BQU9GLE9BQU9DLElBQUksQ0FBQ0MsSUFBSTtRQUN6QixPQUFPO1lBQ0wsTUFBTSxJQUFJSCxNQUFNO1FBQ2xCO0lBRUYsRUFBRSxPQUFPTixPQUFPO1FBQ2RMLFFBQVFLLEtBQUssQ0FBQyw2QkFBNkJBO1FBQzNDLE9BQU8sTUFBTSxrQ0FBa0M7SUFDakQ7QUFDRixFQUFFO0FBRUssTUFBTVUsU0FBUztJQUNwQmpCLGFBQWFrQixVQUFVLENBQUMsUUFBUSxzQ0FBc0M7SUFDdEVoQixRQUFRQyxHQUFHLENBQUM7QUFDZCxFQUFFIiwic291cmNlcyI6WyIvVXNlcnMvZmgvRGVza3RvcC9JU0EvR3JhcGhRbC9hcHAvYXV0aC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ25JbihlbWFpbDogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSB7IFxuICBjb25zdCBjcmVkZW50aWFscyA9IGAke2VtYWlsfToke3Bhc3N3b3JkfWA7XG4gIGNvbnN0IGVuY29kZWRDcmVkZW50aWFscyA9IGJ0b2EoY3JlZGVudGlhbHMpOyAvLyBjb252ZXJ0IHN0cmluZyB0byBieXRlc1xuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vbGVhcm4ucmVib290MDEuY29tL2FwaS9hdXRoL3NpZ25pblwiLCB7IFxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJhc2ljICR7ZW5jb2RlZENyZWRlbnRpYWxzfWAsXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgY29uc3QgdG9rZW4gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7ICAvLyBUb2tlbiByZXR1cm5lZCBhcyBKU09OXG5cbiAgICAgIGlmICh0b2tlbiAmJiB0b2tlbi5hY2Nlc3NfdG9rZW4pIHtcbiAgICAgICAgY29uc3QgY2xlYW5Ub2tlbiA9IHRva2VuLmFjY2Vzc190b2tlbi5yZXBsYWNlKC9eXCIoLiopXCIkLywgXCIkMVwiKTsgIC8vIHJlbW92ZSB0aGUgdG9rZW4gZnJvbSB0aGUgcmVzcG9uc2VcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJqd3RcIiwgY2xlYW5Ub2tlbik7IC8vIHNldCB0aGUgdG9rZW4gdG8gbG9jYWxTdG9yYWdlIFxuICAgICAgICBjb25zb2xlLmxvZyhcIkpXVCBUb2tlbiBzYXZlZDpcIiwgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2p3dCcpKTtcblxuICAgICAgICByZXR1cm4gY2xlYW5Ub2tlbjsgLy8gUmV0dXJuIHRoZSB0b2tlbiBmb3IgdXNlIGluIHJlZGlyZWN0aW9uXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gXCJMb2dpbiBzdWNjZXNzZnVsLCBidXQgbm8gdG9rZW4gcmVjZWl2ZWQuXCI7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVycm9yVGV4dCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIC8vIE1ha2Ugc3VyZSB3ZSBleHRyYWN0IGEgbWVhbmluZ2Z1bCBlcnJvciBtZXNzYWdlIGhlcmVcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSBlcnJvclRleHQubWVzc2FnZSB8fCBcIkxvZ2luIGZhaWxlZC4gUGxlYXNlIHRyeSBhZ2Fpbi5cIjtcbiAgICAgIHJldHVybiBtZXNzYWdlOyAvLyBSZXR1cm4gdGhlIGVycm9yIG1lc3NhZ2UgZnJvbSB0aGUgcmVzcG9uc2VcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGR1cmluZyBsb2dpbjpcIiwgZXJyb3IpO1xuICAgIHJldHVybiBcIkFuIGVycm9yIG9jY3VycmVkLiBQbGVhc2UgdHJ5IGFnYWluLlwiOyAvLyBSZXR1cm4gZXJyb3IgbWVzc2FnZVxuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZmV0Y2hVc2VySW5mbyA9IGFzeW5jICgpID0+IHsgLy8gR2V0IHVzZXIgaW5mb3JtYXRpb25cbiAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnand0Jyk7XG4gIGlmICghdG9rZW4pIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9sZWFybi5yZWJvb3QwMS5jb20vYXBpL2dyYXBocWwtZW5naW5lL3YxL2dyYXBocWwnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAsXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgcXVlcnk6IGBcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB1c2VyIHtcbiAgICAgICAgICAgICAgICAgICAgZmlyc3ROYW1lXG4gICAgICAgICAgICAgICAgICAgIGxhc3ROYW1lXG4gICAgICAgICAgICAgICAgICAgIGlkXG4gICAgICAgICAgICAgICAgICAgIGxvZ2luXG4gICAgICAgICAgICAgICAgICAgIGVtYWlsXG4gICAgICAgICAgICAgICAgICAgIGNhbXB1c1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgYCxcbiAgICB9KSxcbiAgfSk7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCB1c2VyIGluZm8nKTtcbiAgICB9XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAvLyBNYWtlIHN1cmUgd2UgaGF2ZSBkYXRhIGJlZm9yZSByZXR1cm5pbmcgaXRcbiAgICBpZiAocmVzdWx0LmRhdGEgJiYgcmVzdWx0LmRhdGEudXNlcikge1xuICAgICAgcmV0dXJuIHJlc3VsdC5kYXRhLnVzZXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVXNlciBkYXRhIGlzIG1pc3Npbmcgb3IgaW52YWxpZC4nKTtcbiAgICB9XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyB1c2VyIGluZm86JywgZXJyb3IpO1xuICAgIHJldHVybiBudWxsOyAvLyBSZXR1cm4gbnVsbCBpZiB0aGUgZmV0Y2ggZmFpbGVkXG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBsb2dvdXQgPSAoKSA9PiB7XG4gIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdqd3QnKTsgLy8gcmVtb3ZlIHRoZSB0b2tlbiBmcm9tIGxvY2FsIHN0b3JhZ2VcbiAgY29uc29sZS5sb2coXCJVc2VyIGxvZ2dlZCBvdXRcIik7XG59O1xuIl0sIm5hbWVzIjpbInNpZ25JbiIsImVtYWlsIiwicGFzc3dvcmQiLCJjcmVkZW50aWFscyIsImVuY29kZWRDcmVkZW50aWFscyIsImJ0b2EiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsIkF1dGhvcml6YXRpb24iLCJvayIsInRva2VuIiwianNvbiIsImFjY2Vzc190b2tlbiIsImNsZWFuVG9rZW4iLCJyZXBsYWNlIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImNvbnNvbGUiLCJsb2ciLCJnZXRJdGVtIiwiZXJyb3JUZXh0IiwibWVzc2FnZSIsImVycm9yIiwiZmV0Y2hVc2VySW5mbyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicXVlcnkiLCJFcnJvciIsInJlc3VsdCIsImRhdGEiLCJ1c2VyIiwibG9nb3V0IiwicmVtb3ZlSXRlbSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./app/auth.tsx\n"));

/***/ })

});