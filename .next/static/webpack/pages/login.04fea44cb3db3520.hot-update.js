"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/login",{

/***/ "(pages-dir-browser)/./app/auth.tsx":
/*!**********************!*\
  !*** ./app/auth.tsx ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchUserInfo: () => (/* binding */ fetchUserInfo),\n/* harmony export */   logout: () => (/* binding */ logout),\n/* harmony export */   signIn: () => (/* binding */ signIn)\n/* harmony export */ });\nasync function signIn(email, password) {\n    const credentials = \"\".concat(email, \":\").concat(password);\n    const encodedCredentials = btoa(credentials); // convert string to bytes\n    try {\n        const response = await fetch(\"https://learn.reboot01.com/api/auth/signin\", {\n            method: \"POST\",\n            headers: {\n                Authorization: \"Basic \".concat(encodedCredentials),\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (response.ok) {\n            const token = await response.json(); // Token returned as json\n            if (token) {\n                const cleanToken = token.replace(/^\"(.*)\"$/, \"$1\"); // remove the token from the response\n                localStorage.setItem(\"jwt\", cleanToken); // set the token to the response \n                return cleanToken; // Return the token for use in redirection\n            } else {\n                return \"Login successful, but no token received.\";\n            }\n        } else {\n            const errorText = await response.json();\n            return errorText; // Return the error message from the response\n        }\n    } catch (error) {\n        console.error(\"Error during login:\", error);\n        return \"An error occurred. Please try again.\"; // Return error message\n    }\n}\nconst fetchUserInfo = async ()=>{\n    const token = localStorage.getItem('jwt');\n    if (!token) return null;\n    try {\n        const response = await fetch('https://learn.reboot01.com/api/graphql-engine/v1/graphql', {\n            method: 'POST',\n            headers: {\n                Authorization: \"Bearer \".concat(token),\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                query: \"\\n            {\\n                user {\\n                    firstName\\n                    lastName\\n                    id\\n                    login\\n                    email\\n                    campus\\n                }\\n            }\\n        \"\n            })\n        });\n        if (!response.ok) {\n            throw new Error('Failed to fetch user info');\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error fetching user info:', error);\n        return null;\n    }\n};\nconst logout = ()=>{\n    document.cookie = \"jwt=; path=/; max-age=0\";\n    localStorage.removeItem('jwt'); // Remove the JWT token from localStorage\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2FwcC9hdXRoLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDTyxlQUFlQSxPQUFPQyxLQUFhLEVBQUVDLFFBQWdCO0lBQzFELE1BQU1DLGNBQWMsR0FBWUQsT0FBVEQsT0FBTSxLQUFZLE9BQVRDO0lBQ2hDLE1BQU1FLHFCQUFxQkMsS0FBS0YsY0FBYywwQkFBMEI7SUFFeEUsSUFBSTtRQUNGLE1BQU1HLFdBQVcsTUFBTUMsTUFBTSw4Q0FBOEM7WUFDekVDLFFBQVE7WUFDUkMsU0FBUztnQkFDUEMsZUFBZSxTQUE0QixPQUFuQk47Z0JBQ3hCLGdCQUFnQjtZQUNsQjtRQUNGO1FBRUEsSUFBSUUsU0FBU0ssRUFBRSxFQUFFO1lBQ2YsTUFBTUMsUUFBUSxNQUFNTixTQUFTTyxJQUFJLElBQUsseUJBQXlCO1lBRS9ELElBQUlELE9BQU87Z0JBQ1QsTUFBTUUsYUFBYUYsTUFBTUcsT0FBTyxDQUFDLFlBQVksT0FBUSxxQ0FBcUM7Z0JBQzFGQyxhQUFhQyxPQUFPLENBQUMsT0FBT0gsYUFBYSxpQ0FBaUM7Z0JBRTFFLE9BQU9BLFlBQVksMENBQTBDO1lBQy9ELE9BQU87Z0JBQ0wsT0FBTztZQUNUO1FBQ0YsT0FBTztZQUNMLE1BQU1JLFlBQVksTUFBTVosU0FBU08sSUFBSTtZQUNyQyxPQUFPSyxXQUFXLDZDQUE2QztRQUNqRTtJQUNGLEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsdUJBQXVCQTtRQUNyQyxPQUFPLHdDQUF3Qyx1QkFBdUI7SUFDeEU7QUFDRjtBQUdPLE1BQU1FLGdCQUFnQjtJQUMzQixNQUFNVCxRQUFRSSxhQUFhTSxPQUFPLENBQUM7SUFDbkMsSUFBSSxDQUFDVixPQUFPLE9BQU87SUFFbkIsSUFBSTtRQUNGLE1BQU1OLFdBQVcsTUFBTUMsTUFBTSw0REFBNEQ7WUFDdkZDLFFBQVE7WUFDUkMsU0FBUztnQkFDUEMsZUFBZSxVQUFnQixPQUFORTtnQkFDekIsZ0JBQWdCO1lBQ2xCO1lBQ0FXLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFDbkJDLE9BQVE7WUFZWjtRQUNGO1FBR0UsSUFBSSxDQUFDcEIsU0FBU0ssRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSWdCLE1BQU07UUFDbEI7UUFFQSxPQUFPLE1BQU1yQixTQUFTTyxJQUFJO0lBQzVCLEVBQUUsT0FBT00sT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsNkJBQTZCQTtRQUMzQyxPQUFPO0lBQ1Q7QUFDRixFQUFFO0FBRUssTUFBTVMsU0FBUztJQUNwQkMsU0FBU0MsTUFBTSxHQUFHO0lBQ2xCZCxhQUFhZSxVQUFVLENBQUMsUUFBUSx5Q0FBeUM7QUFDM0UsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL2ZoL0Rlc2t0b3AvSVNBL0dyYXBoUWwvYXBwL2F1dGgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ25JbihlbWFpbDogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSB7IFxuICBjb25zdCBjcmVkZW50aWFscyA9IGAke2VtYWlsfToke3Bhc3N3b3JkfWA7XG4gIGNvbnN0IGVuY29kZWRDcmVkZW50aWFscyA9IGJ0b2EoY3JlZGVudGlhbHMpOyAvLyBjb252ZXJ0IHN0cmluZyB0byBieXRlc1xuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vbGVhcm4ucmVib290MDEuY29tL2FwaS9hdXRoL3NpZ25pblwiLCB7IFxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgQXV0aG9yaXphdGlvbjogYEJhc2ljICR7ZW5jb2RlZENyZWRlbnRpYWxzfWAsXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgY29uc3QgdG9rZW4gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7ICAvLyBUb2tlbiByZXR1cm5lZCBhcyBqc29uXG5cbiAgICAgIGlmICh0b2tlbikge1xuICAgICAgICBjb25zdCBjbGVhblRva2VuID0gdG9rZW4ucmVwbGFjZSgvXlwiKC4qKVwiJC8sIFwiJDFcIik7ICAvLyByZW1vdmUgdGhlIHRva2VuIGZyb20gdGhlIHJlc3BvbnNlXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiand0XCIsIGNsZWFuVG9rZW4pOyAvLyBzZXQgdGhlIHRva2VuIHRvIHRoZSByZXNwb25zZSBcblxuICAgICAgICByZXR1cm4gY2xlYW5Ub2tlbjsgLy8gUmV0dXJuIHRoZSB0b2tlbiBmb3IgdXNlIGluIHJlZGlyZWN0aW9uXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gXCJMb2dpbiBzdWNjZXNzZnVsLCBidXQgbm8gdG9rZW4gcmVjZWl2ZWQuXCI7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVycm9yVGV4dCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIHJldHVybiBlcnJvclRleHQ7IC8vIFJldHVybiB0aGUgZXJyb3IgbWVzc2FnZSBmcm9tIHRoZSByZXNwb25zZVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZHVyaW5nIGxvZ2luOlwiLCBlcnJvcik7XG4gICAgcmV0dXJuIFwiQW4gZXJyb3Igb2NjdXJyZWQuIFBsZWFzZSB0cnkgYWdhaW4uXCI7IC8vIFJldHVybiBlcnJvciBtZXNzYWdlXG4gIH1cbn07XG5cblxuZXhwb3J0IGNvbnN0IGZldGNoVXNlckluZm8gPSBhc3luYyAoKSA9PiB7IC8vIEdldCB1c2VyIGluZm9ybWF0aW9uXG4gIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2p3dCcpO1xuICBpZiAoIXRva2VuKSByZXR1cm4gbnVsbDtcblxuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vbGVhcm4ucmVib290MDEuY29tL2FwaS9ncmFwaHFsLWVuZ2luZS92MS9ncmFwaHFsJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0b2tlbn1gLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIHF1ZXJ5OiBgXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdXNlciB7XG4gICAgICAgICAgICAgICAgICAgIGZpcnN0TmFtZVxuICAgICAgICAgICAgICAgICAgICBsYXN0TmFtZVxuICAgICAgICAgICAgICAgICAgICBpZFxuICAgICAgICAgICAgICAgICAgICBsb2dpblxuICAgICAgICAgICAgICAgICAgICBlbWFpbFxuICAgICAgICAgICAgICAgICAgICBjYW1wdXNcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIGAsXG4gICAgfSksXG4gIH1cbik7XG5cbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCB1c2VyIGluZm8nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHVzZXIgaW5mbzonLCBlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBsb2dvdXQgPSAoKSA9PiB7XG4gIGRvY3VtZW50LmNvb2tpZSA9IFwiand0PTsgcGF0aD0vOyBtYXgtYWdlPTBcIjsgXG4gIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdqd3QnKTsgLy8gUmVtb3ZlIHRoZSBKV1QgdG9rZW4gZnJvbSBsb2NhbFN0b3JhZ2Vcbn07XG4iXSwibmFtZXMiOlsic2lnbkluIiwiZW1haWwiLCJwYXNzd29yZCIsImNyZWRlbnRpYWxzIiwiZW5jb2RlZENyZWRlbnRpYWxzIiwiYnRvYSIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsIm9rIiwidG9rZW4iLCJqc29uIiwiY2xlYW5Ub2tlbiIsInJlcGxhY2UiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiZXJyb3JUZXh0IiwiZXJyb3IiLCJjb25zb2xlIiwiZmV0Y2hVc2VySW5mbyIsImdldEl0ZW0iLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInF1ZXJ5IiwiRXJyb3IiLCJsb2dvdXQiLCJkb2N1bWVudCIsImNvb2tpZSIsInJlbW92ZUl0ZW0iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./app/auth.tsx\n"));

/***/ })

});